// <auto-generated />
using System;
using EmailGetService.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EmailGetService.Migrations
{
    [DbContext(typeof(EmailDbContext))]
    [Migration("20201224071022_MailBox")]
    partial class MailBox
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("EmailGetService.Models.Attachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<byte[]>("AttachmentInBytes")
                        .HasColumnType("bytea");

                    b.Property<int>("EmailId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmailId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("EmailGetService.Models.Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("MailBoxId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("MessageId")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("RecievedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Sender")
                        .HasColumnType("text");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.Property<bool>("Synchronized")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("MailBoxId");

                    b.ToTable("Emails");
                });

            modelBuilder.Entity("EmailGetService.Models.MailBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("ImapPort")
                        .HasColumnType("integer");

                    b.Property<string>("ImapServer")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("MailBoxes");
                });

            modelBuilder.Entity("EmailGetService.Models.Attachment", b =>
                {
                    b.HasOne("EmailGetService.Models.Email", "Email")
                        .WithMany("Attachments")
                        .HasForeignKey("EmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Email");
                });

            modelBuilder.Entity("EmailGetService.Models.Email", b =>
                {
                    b.HasOne("EmailGetService.Models.MailBox", "MailBox")
                        .WithMany("Emails")
                        .HasForeignKey("MailBoxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MailBox");
                });

            modelBuilder.Entity("EmailGetService.Models.Email", b =>
                {
                    b.Navigation("Attachments");
                });

            modelBuilder.Entity("EmailGetService.Models.MailBox", b =>
                {
                    b.Navigation("Emails");
                });
#pragma warning restore 612, 618
        }
    }
}
